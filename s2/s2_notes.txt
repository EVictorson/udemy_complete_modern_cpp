part 10: just first "hello world" type project
part 11: overview of compilation process
part 12: primitive types, qualifiers on primitive types.
climits headerfile includes macros for 
cfloat or <float.h> headerfile decines macros for sizes of floats
talking about variable declaration
part 13: input
part 14: functions
part 15: more functions (this time with header files)
Note:

we are now doing multi-file compilations (using header files for functions)
using vscode you will need to change your tasks.json:

the obvious alternative is to use g++ from command line, or create a cmakelists.txt

{
    "tasks": [
        {
            "type": "cppbuild",
            "label": "C/C++: g++ build active file",
            "command": "/usr/bin/g++",
            "args": [
                "-g",
                //"${file}",
                "${fileDirname}/*.cpp",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "Task generated by Debugger."
        }
    ],
    "version": "2.0.0"
}



part 16: basic debugging
part 17: uniform initialization (c++11 using braces {} to initialize)
part 18: pointers
part 19: assignment 1, pointer arithmetic functions
part 20: references: He explains it as references are just an alias to a variable (it's the address of)
part 21: assignment 2, arithmetic functions with references
